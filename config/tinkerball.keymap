#include "keys_nb_osx.h"
#include "keys_nb_win.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define MEDIA 1
#define SYMBOLS 2
#define NUMBERS 3
#define NAV 4
#define FUNCTION 5
#define BLUETOOTH 6
#define MOUSE 7
#define CLICK 8
#define SCRL 9
#define BIRO 10

// tapping-term-ms

#define TT 160

&caps_word { continue-list = <NB_UNDERSCORE NB_MINUS WNB_UNDERSCORE WNB_MINUS>; };

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_ques {
            timeout-ms = <50>;
            key-positions = <7 6>;
            bindings = <&ques_excl>;
        };

        aa {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <22 23>;
        };

        ae {
            bindings = <&kp APOS>;
            key-positions = <3 2>;
        };

        oe {
            bindings = <&kp SEMI>;
            key-positions = <27 26>;
        };

        combo_lpar {
            bindings = <&kp NB_LPAR>;
            key-positions = <22 21>;
        };

        combo_rpara {
            bindings = <&kp NB_RPAR>;
            key-positions = <7 8>;
        };

        combo-lcurl {
            bindings = <&kp NB_RBRC>;
            key-positions = <2 1>;
        };

        combo_rcurl {
            bindings = <&kp NB_RBRC>;
            key-positions = <27 28>;
        };

        combo_at {
            bindings = <&kp NB_AT>;
            key-positions = <3 8>;
        };
    };
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            bindings = <&kp>, <&kp>;

            label = "HMR";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
            hold-trigger-on-release;
        };

        hmpt: homerow_mods_prefer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_PREFER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <TT>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        blt: balanced_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_LAYER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <TT>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };

        tt: toggle_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "TOGGLE_LAYER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&tog>;
        };

        repeat_encoder: repeat_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "REPEAT_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&kp BSPC>, <&key_repeat>;
        };

        tsl: behavior_trackball_scroll {
            compatible = "zmk,behavior-point-device-incremental";
            label = "TRACKBALL_SCROLL";
            #trackball-binding-cells = <0>;
            mode = "scroll-mode";
            flavor = "default";
            scale_mode = "dividor";
            scale_factor = <4>;
            smoothing;
        };

        tkp_fast: behavior_trackball_key_press {
            compatible = "zmk,behavior-point-device-directional";
            label = "TRACKBALL_KEY_PRESS";
            #trackball-binding-cells = <4>;
            mode = "distance-mode";
            flavor = "2-dim";
            step_size = <50>;
        };

        apos_dqt: quot_doublequot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NB_APOS>, <&kp NB_DQT>;

            label = "quotus";
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ques_excl: questionmark_exlamation_mark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NB_QMARK>, <&kp NB_EXCL>;

            label = "questus";
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        nav_ball_scroll {
            if-layers = <MOUSE NAV>;
            then-layer = <BIRO>;
        };

        num_ball_scroll {
            if-layers = <MOUSE SYMBOLS>;
            then-layer = <SCRL>;
        };
    };

    macros {
        vi_editing_mode: vi_editing_mode {
            label = "vi editing-mode";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp S &kp E &kp T &kp SPACE &kp MINUS &kp O &kp SPACE &kp V &kp I &kp RET>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_vi_editing_mode {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&vi_editing_mode>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //  '    |  ,  |  .  |  P/Nav  |  Y  |                             |  F/Fn  |  G  |  C/Caps  |    R    |  L   |
            // A/Sym |  O/Ctrl  |  E/Alt [A->F13]? |  U/Cmd  |  I  |           |  D  |  H/Cmd  |  T/Alt  |    N/Ctrl    |  S/Sym |
            // Esc/Lsft|  Q/Click  |  J  |  K  |  X  |                               |  B  |  M  |  N  |    V    |Z/Rsft|
            // | Media/Play-Pause | Bspc/LC | SPC/Num/RC |                                                       | Ent | Tab |     |

            bindings = <
  &lt BLUETOOTH Q  &kp W        &kp F        &blt NAV P          &kp B      &kp J    &kp L               &hm CAPS U   &kp Y        &kp MINUS
  &hml LCTRL A     &hml LALT R  &hml LGUI S  &hml LSHFT T        &kp G      &kp M    &hmr RIGHT_SHIFT N  &hmr RGUI E  &hmr LALT I  &hmr RCTRL O
  &hm LSHFT Z      &kp X        &kp C        &kp D               &kp V      &kp K    &kp H               &kp COMMA    &kp DOT      &kp QMARK
                                &kp SPACE    &blt NUMBERS SPACE  &kp TAB    &kp RET  &blt NUMBERS BSPC
            >;

            sensor-bindings = <&inc_dec_kp BSPC BSPC>;
        };

        medi_jah {
            bindings = <
  &trans  &trans  &trans          &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans          &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans          &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &tt C_PP MEDIA  &trans  &trans    &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbols {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //  !  |  @  |  {  |  }  |     |                |         |    <    |    >   |  *  |   #  |
            //  ^  |  $  |  (  |  )  |  \  |                |    &    |    =    |    -   |  :  |   ;  |
            //  ~  |  `  |  [  |  ]  |     |                |         |    +    |    _   |  %  |   ?  |
            //         |  ,,  | |/&  | //\ |                |    "    |    `    |   ,,   |

            bindings = <
  &kp EXCL   &hm LS(LCTRL) AT  &hmpt LS(LALT) LBRC  &hm LS(LCMD) RBRC  &none                  &none     &hm RS(RCMD) LT  &hmpt RS(LALT) GT  &hm RS(RCTRL) ASTERISK  &hm LA(N3) HASH
  &kp CARET  &hm LCTRL DOLLAR  &hmpt LALT LPAR      &hm LCMD RPAR      &kp BACKSLASH          &kp AMPS  &hm RCMD EQL     &hmpt LALT MINUS   &hm RCTRL COLON         &kp SEMICOLON
  &kp TILDE  &kp GRAVE         &kp LBKT             &kp RBKT           &none                  &none     &kp PLUS         &kp UNDERSCORE     &kp PERCENT             &kp QMARK
                               &trans               &mt AMPS PIPE      &mt BACKSLASH SLASH    &kp DQT   &kp GRAVE
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
            trackball-bindings = <&tmv_fine>;
        };

        numbers {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //   s-f5  |  s-f6  |  s-f7 |  s-f8  |   |            |         |    4/<    |    5/>   |  6/*  |   7//  |
            //    s-f1   |  s-f2 |  s-f3 | s-f4 |   |             |   DEL   |    0/=    |    1/-   | 2/: |   3/;  |
            //     s-f9   | s-f10 | s-f11 | s-f12 |   |           |         |    8/+    |    9/_   | +/- | *//  |
            //         |      |     |      |     |      |    .    |    =    |      |

            bindings = <
  &kp LS(F5)  &kp LS(F6)   &kp LS(F7)   &kp LS(F8)   &none    &kp NB_BSLH    &kp N7    &kp N8          &kp N9  &kp NB_STAR
  &kp LS(F1)  &kp LS(F2)   &kp LS(F3)   &kp LS(F4)   &none    &kp NB_FSLH  &kp N4   &kp N5       &kp N6     &kp NB_EQUAL
  &kp LS(F9)  &kp LS(F10)  &kp LS(F11)  &kp LS(F12)  &none    &kp NB_PIPE    &kp N1  &kp N2  &kp N3   &kp NB_PLUS
                           &none        &none        &none    &kp DOT  &kp N0
            >;

            trackball-bindings = <&tsl>;
        };

        nav {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //     |     |     |     |     |                |         |         |    ^   |     |      |
            //     |     |     |     |     |                |         |    <    |    v   |  >  |      |
            //     |     |     |     |     |                |         |   HOME  |        | END |      |
            //         |      |     |      |     |      |    PgDN   |   PgUP  |      |

            bindings = <
  &none  &none  &none  &none  &none    &none      &none      &kp UP    &none      &none
  &kp LEFT   &kp DOWN  &kp UP &kp RIGHT      &none      &kp RIGHT_SHIFT  &kp LEFT_GUI  &kp RALT         &kp LCTRL  &none
  &none  &none  &none  &none  &none    &none      &kp HOME   &none     &kp END    &none
                &none  &none  &none    &kp PG_DN  &kp PG_UP
            >;
        };

        fn {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //  F5 |  F6 | F7  | F8  |     |                |         |         |        |     |      |
            //  F1 |  F2 | F3  | F4  | DEL |                |         |         |        |     |      |
            //  F9 | F10 | F11 | F12 |     |                |   ,,    |   ,,    |        |     |      |
            //         |      |     |      |     |      |           |         |      |

            bindings = <
  &kp F5  &kp F6   &kp F7   &kp F8   &none      &none  &none  &none  &none  &none
  &kp F1  &kp F2   &kp F3   &kp F4   &kp DEL    &none  &none  &none  &none  &none
  &kp F9  &kp F10  &kp F11  &kp F12  &none      &none  &none  &none  &none  &none
                   &none    &none    &none      &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        bt {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //     |     |     |     |     |                |         |         |        |     |      |
            //     |     |     |     |     |                |   P0    |    P1   |   P2   |  P3 |  P4  |
            //     |     |     |     |     |                | BT/USB  |         |        |     |      |
            //         | CLR  |     |      |

            bindings = <
  &none  &none  &none  &none       &none    &none         &none         &none         &none         &none
  &none  &none  &none  &none       &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
  &none  &none  &none  &none       &none    &out OUT_TOG  &none         &none         &none         &none
                &none  &bt BT_CLR  &none    &none         &none
            >;
        };

        mouse {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;

            trackball-bindings = <&tmv>;
        };

        click {
            bindings = <
  &trans     &trans  &trans    &trans     &trans       &trans  &trans  &trans  &trans  &trans
  &kp LSHFT  &trans  &trans    &trans     &trans       &trans  &trans  &trans  &trans  &trans
  &kp LCTRL  &trans  &kp LALT  &kp LCMD   &trans       &trans  &trans  &trans  &trans  &trans
                     &trans    &mkp RCLK  &mkp LCLK    &trans  &trans
            >;

            trackball-bindings = <&tmv_fine>;
        };

        scrolly_moly {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;

            trackball-bindings = <&tsl>;
        };

        // ball point

        biro {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;

            trackball-bindings = <&tkp_fast LEFT RIGHT UP DOWN>;
        };
    };
};